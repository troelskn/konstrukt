<?xml version="1.0" ?>
<project name="konstrukt" basedir="." default="build">
    <taskdef classname="phing.tasks.ext.d51PearPkg2Task" name="d51pearpkg2" />
    <taskdef classname="phing.tasks.ext.IlibPearDeployerTask" name="peardeploy" />

    <property name="package-name" value="${phing.project.name}" />
    <property name="version" value="0.4.1" />
    <property name="stability" value="stable" />
    <property name="pear.channel" value="public.intraface.dk" />

    <property name="source.dir" value="." />
    <property name="tests.dir" value="./tests" />
    <property name="build.dir" value="../build" />
    <property name="reports.phpcs.dir" value="../build/logs" />
    <property name="reports.dir" value="../build/logs" />
    <property name="reports.phpunit.dir" value="../../build/logs" />
    <property name="reports.coverage.dir" value="../../build/logs/coverage" />
    <property name="api.dir" value="../build/api" />

    <target name="prepare">
        <delete dir="${build.dir}" />
        <mkdir dir="${build.dir}" />
    </target>

    <target name="export">
        <echo msg="Exporting SVN files" />
        <exec command="svn export ${source.dir} ${build.dir}/temp" />
        <mkdir dir="${build.dir}/package/${package-name}-${version}" />
        <copy todir="${build.dir}/package/${package-name}-${version}">
            <filterchain>
                <replacetokens begintoken="@@" endtoken="@@">
                    <token key="VERSION" value="${version}" />
                </replacetokens>
            </filterchain>
            <fileset dir="${build.dir}/temp">
                <include name="lib/**" />
            </fileset>
        </copy>
    	<copy todir="${build.dir}/package/${package-name}-${version}" >
    	  <fileset dir="./lib">
    	    <include name="**" />
    	  </fileset>
    	</copy>
    		<delete>
    		  <fileset dir="${build.dir}/package/${package-name}-${version}/lib">
    		    <include name="**" />
    		  </fileset>
    		</delete>
        <delete dir="${build.dir}/package/${package-name}-${version}/lib" />

    </target>

    <target name="pear" depends="export">
        <d51pearpkg2 dir="${build.dir}/package/${package-name}-${version}/" baseinstalldir="/">
            <name>${package-name}</name>
            <summary>RESTful framework for php5</summary>
            <channel>${pear.channel}</channel>
            <description>This is a temporary package release. Just until</description>
            <lead user="lsolesen" name="Lars Olesen" email="lars@legestue.net" />
            <lead user="sune.t.jensen" name="Sune Jensen" email="sj@sunet.dk" />
            <license>LGPL</license>
            <version release="${version}" api="${version}" />
            <stability release="${stability}" api="${stability}" />
            <release>
            </release>
            <dependencies>
                <php minimum_version="5.2.0" />
                <pear minimum_version="1.6.0" recommended_version="1.6.1" />
            </dependencies>
            <notes>* Added the possiblity to create custom error pages.</notes>
        </d51pearpkg2>
    </target>

    <target name="build" depends="prepare, export, make-pear-package"></target>
    <target name="make-pear-package" depends="pear">
        <tar compression="gzip" destfile="${build.dir}/${package-name}-${version}.tgz" basedir="${build.dir}/package" />
    </target>

    <target name="deploy" depends="build">
        <property file="./build.properties" />
        <peardeploy uri="${pear.channel.uri}" username="${pear.channel.username}" password="${pear.channel.password}">
            <fileset dir="${build.dir}">
                <include name="${package-name}-${version}.tgz"/>
            </fileset>
        </peardeploy>
        <ftpdeploy host="${ftp.host}" username="${ftp.user}" password="${ftp.password}" port="21" dir="./public.intraface.dk/docs/" mode="binary" clearfirst="false">
            <fileset dir="${api.dir}">
                <include name="*/**" />
            </fileset>
        </ftpdeploy>
    </target>

    <target name="phpcs">
        <exec output="${reports.phpcs.dir}/checkstyle.xml" dir="${source.dir}/src" command="phpcs --report=checkstyle . --standard=PEAR" />
    </target>

    <target name="php-documentor" depends="export">
        <mkdir dir="${api.dir}/${package-name}" />
        <exec dir="${source.dir}" command="phpdoc -ue on -t ${api.dir}/${package-name} -d ./src" passthru="true" />
    </target>

    <target name="test">
    </target>

</project>
